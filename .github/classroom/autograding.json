{
  "repo": "helsoc7/input-hello",
  "maxTestIndex": 5,
  "incrementalPassRequired": true,
  "testLimit": 13,
  "introduction": "In dieser ersten kleinen Mini-Aufgabe erstellt ihr ein Skript, das Hello World ausgibt. \n Folgt den Anweisungen. Unter Hilfe findet ihr Links, die mit dem Wort Spickzettel markiert sind. Drückt diese bei Bedarf, falls ihr nicht weiterkommt. \n",
  "logo_url": "https://www.computerhope.com/jargon/s/standard-input.png",
  "timeframe": "15 Minuten (Viel Erfolg!)",
  "tests": [
    {
      "specs": {
        "title": "Erstelle ein input.sh Datei"
      },
      "name": "checking for input.sh script",
      "feedback": "input.sh script could not be found",
      "urls": [
        "https://wiki.ubuntuusers.de/Shell/Bash-Skripting-Guide_f%C3%BCr_Anf%C3%A4nger/"
      ],
      "keywords": [
        "bash",
        "script",
        "linux"
      ],
      "type": "",
      "run": "test -f input.sh",
      "file": "",
      "output": "",
      "comparison": "",
      "points": 20,
      "timeout": 120
    },
    {
      "specs": {
        "title": "Erstelle ein Shebang in der Datei"
      },
      "name": "checking for shebang",
      "feedback": "shebang could not be found in the mini.sh",
      "urls": [
        "https://wiki.ubuntuusers.de/Shebang_f%C3%BCr_Shellskripte/"
      ],
      "keywords": [
        "bash",
        "shebang",
        "linux"
      ],
      "type": "",
      "run": "grep -q '^#!/bin/bash' input.sh",
      "file": "",
      "output": "",
      "comparison": "",
      "points": 5,
      "timeout": 1
    },
    {
      "specs": {
        "title": "Schreibe das Bash-Skript. Dabei soll eine Eingabe von STDIN erfolgen, in der der Name eingegeben werden soll. "
      },
      "name": "create a script with STDIN of name",
      "feedback": "The script does not seem to have an input for the name. Please use the read function.",
      "urls": [
        "https://linuxize.com/post/bash-read/"
      ],
      "keywords": [
        "bash",
        "read",
        "stdin",
        "linux"
      ],
      "type": "",
      "run": "bash input.sh",
      "file": "",
      "input": "test",
      "points": 5,
      "timeout": 1
    },
    {
      "specs": {
        "title": "Ergänze das Bash-Skript um eine Ausgabe des Namens. Gib dabei \"Hello NAME\" aus."
      },
      "name": "add the output for the hello name",
      "feedback": "The script does not seem to have an output with hello and the name that should have been entered.",
      "urls": [
        "https://phlow.de/magazin/terminal/echo/"
      ],
      "keywords": [
        "bash",
        "echo",
        "variable",
        "linux",
        "stdout"
      ],
      "type": "",
      "run": "bash input.sh",
      "file": "",
      "input": "test",
      "output": "Hello test",
      "comparison": "exact",
      "points": 5,
      "timeout": 1
    },
    {
      "specs": {
        "title": "Erstelle eine Python-Datei input.py"
      },
      "name": "add the python file.",
      "feedback": "Please add a python file with the name input.py",
      "urls": [],
      "keywords": [
        "python",
        "file"
      ],
      "type": "",
      "run": "test -f input.py",
      "file": "",
      "output": "",
      "comparison": "",
      "points": 5,
      "timeout": 1
    },
    {
      "specs": {
        "title": "Fordere eine Eingabe mithilfe der input-Funktion und speichere sie in einer Variablen zwischen"
      },
      "name": "save the input in a variable",
      "feedback": "The script does not seem to have an input function. Please add one and save it into a variable",
      "urls": [
        "https://www.python-kurs.eu/python3_eingabe.php"
      ],
      "keywords": [
        "python",
        "input",
        "variable"
      ],
      "type": "",
      "run": "python input.py",
      "file": "",
      "input": "test",
      "points": 5,
      "timeout": 1
    },
    {
      "specs": {
        "title": "Ergänze das Python-Skript um eine Ausgabe des Namens. Gib dabei \"Hello NAME\" aus."
      },
      "name": "add the output for the hello name",
      "feedback": "The script does not seem to have an output with hello and the name that should have been entered.",
      "urls": [
        "https://www.w3schools.com/python/ref_func_print.asp"
      ],
      "keywords": [
        "python",
        "print",
        "variable"
      ],
      "type": "",
      "run": "python input.py",
      "file": "",
      "input": "test",
      "output": "Hello test",
      "comparison": "contains",
      "points": 5,
      "timeout": 1
    },
    {
      "specs": {
        "title": "Erstelle eine input.html-Datei",
        "list": "Erstelle ein Formular mit der ID \"inputform\" im Body der html-Datei"
      },
      "name": "add the html file input.html",
      "feedback": "There is the input.html file missing.",
      "urls": [
        ""
      ],
      "keywords": [
        "html",
        "file",
        "form",
        "id",
        "body"
      ],
      "type": "",
      "javascript": "document.querySelectorAll('body form#inputform').length >= 1 ? 'true' : 'false';",
      "file": "input.html",
      "output": "true",
      "comparison": "exact",
      "points": 5,
      "timeout": 1
    },
    {
      "specs": {
        "title": "Füge eine action und ein method Attribut in dem Form hinzu",
        "list": [
          "Die Action soll auf \"/\" weiterleiten.",
          "Die Methode soll auf Post gesetzt werden"
        ]
      },
      "name": "add the action and method attribute",
      "feedback": "The action and method attribute are missing. Check them",
      "urls": [
        ""
      ],
      "keywords": [
        "html",
        "action",
        "form",
        "method",
        "post"
      ],
      "type": "",
      "javascript": "document.querySelector('body form#inputform').getAttribute('method').toUpperCase()=='POST' && document.querySelector('body form#inputform').getAttribute('action')=='/';",
      "file": "input.html",
      "output": "true",
      "comparison": "exact",
      "points": 5,
      "timeout": 1
    },
    {
      "specs": {
        "title": "Erstelle ein Fieldset mit der Legende, die den Namen 'Eingabe' enthält"
      },
      "name": "add the fieldset with legend 'eingabe'",
      "feedback": "The fieldset with legend 'eingabe' is missing",
      "urls": [
        ""
      ],
      "keywords": [
        "html",
        "fieldset",
        "legend"
      ],
      "type": "",
      "javascript": "(function() { var fieldset = document.querySelector('fieldset'); var legend = fieldset ? fieldset.querySelector('legend') : null; return legend && legend.textContent === 'Eingabe'; })()",
      "file": "input.html",
      "output": "true",
      "comparison": "exact",
      "points": 5,
      "timeout": 1
    },
    {
      "specs": {
        "title": "Erstelle ein input-Feld mit Typisierung für ein Textfeld"
      },
      "name": "add the input field with type text",
      "feedback": "The input field with its type text is missing",
      "urls": [
        ""
      ],
      "keywords": [
        "html",
        "input",
        "type",
        "text"
      ],
      "type": "",
      "javascript": "document.querySelectorAll('input[type=text]').length == 1",
      "file": "input.html",
      "output": "true",
      "comparison": "exact",
      "points": 5,
      "timeout": 1
    },
    {
      "specs": {
        "title": "Schreibe ein Label für das Eingabefeld"
      },
      "name": "add a label for the input field",
      "feedback": "The label for the input field is missing",
      "urls": [
        ""
      ],
      "keywords": [
        "html",
        "label"
      ],
      "type": "",
      "javascript": "document.querySelectorAll('label').length == 1",
      "file": "input.html",
      "output": "true",
      "comparison": "exact",
      "points": 5,
      "timeout": 1
    },
    {
      "specs": {
        "title": "Füge einen Submit-Button in das Formular hinzu"
      },
      "name": "Füge einen Submit-Button in das Formular hinzu",
      "feedback": "Your form does not have a submit button. Please include an input with type 'submit' or a button with type 'submit'.",
      "urls": [
        "https://www.w3schools.com/tags/att_input_type_submit.asp"
      ],
      "keywords": [
        "html",
        "input",
        "submit"
      ],
      "file": "input.html",
      "javascript": "document.querySelectorAll('input[type=submit], button[type=submit]').length >= 1",
      "output": "true",
      "comparison": "exact",
      "points": 10
    },
    {
      "specs": {
        "title": "Erstelle eine jinja.py-Datei und eine requirements.txt im Stammverzeichnis des Repositories. Außerdem soll eine template.jinja2-Datei im zu erstellenden Unterverzeichnis templates erstellt werden"
      },
      "name": "checking for files: jinja.py, requirements.txt, templates/template.jinja2",
      "feedback": "required files could not be found (check your file and directory names)",
      "urls": [
        ""
      ],
      "keywords": [
        "python",
        "create script",
        "requirements.txt"
      ],
      "run": "test -d templates && test -f jinja.py && test -f requirements.txt && test -f templates/template.jinja2",
      "output": "true",
      "comparison": "exact",
      "points": 10
    },
    {
      "specs": {
        "title": "Erzeuge eine .gitignore Datei mit dem Eintrag myenv"
      },
      "name": "checking for size and contents of files: .gitignore",
      "feedback": ".gitignore must not be empty and contain myenv entry",
      "urls": [
        "https://git-scm.com/docs/gitignore",
        "https://www.atlassian.com/de/git/tutorials/saving-changes/gitignore",
        "https://www.toptal.com/developers/gitignore"
      ],
      "keywords": [
        "git",
        "gitignore"
      ],
      "type": "",
      "run": "test -s .gitignore && grep -i myenv .gitignore",
      "points": 5,
      "timeout": 10
    },
    {
      "specs": {
        "title": "jinja.py sollte jinja2 importieren, requirements.txt sollte jinja2 beinhalten, templates/template.jinja2 sollte ein Template enthalten mit einer name Variable."
      },
      "name": "checking for size of files: demo.py, requirements.txt, templates/template.jinja2",
      "feedback": "required files must not be empty (check your files)",
      "urls": [
        "https://code.visualstudio.com/docs/getstarted/tips-and-tricks"
      ],
      "keywords": [
        "vscode",
        "create file",
        "create folder"
      ],
      "type": "",
      "run": "test -d templates && test -s demo.py && test -s requirements.txt && test -s templates/template.jinja2",
      "points": 15,
      "timeout": 10
    },
    {
      "specs": {
        "title": "requirements.txt muss die Abhängigkeit für die Templating Engine enthalten"
      },
      "name": "checking for jinja dependency in requirements.txt",
      "feedback": "Jinja2 seems to be missing (check your requirements.txt file)",
      "urls": [
        "https://pypi.org/project/Jinja2/",
        "https://jinja.palletsprojects.com/en/3.0.x/intro/"
      ],
      "keywords": [
        "python",
        "requirements.txt",
        "jinja2"
      ],
      "type": "",
      "run": "test -s requirements.txt && pip install -r requirements.txt && pip list | grep -i jinja2",
      "output": "",
      "points": 5,
      "timeout": 10
    },
    {
      "specs": {
        "title": "Erzeuge ein Bash Sript namens env.sh mit dem entsprechenden shebang, das ein Python venv namens myenv erzeugt (ohne es zu aktivieren)."
      },
      "name": "checking for size and contents of files: myenv",
      "feedback": "myenv must not be empty and contain virtual environment",
      "urls": [
        "https://linuxhandbook.com/run-shell-script/",
        "https://docs.python.org/3/library/venv.html",
        "https://python.land/virtual-environments/virtualenv"
      ],
      "keywords": [
        "python",
        "venv"
      ],
      "type": "",
      "run": "test -s env.sh && bash env.sh && test -d myenv && test -s myenv/bin/activate && . myenv/bin/activate && python -c 'import sys; exit(0 if \"myenv\" in sys.prefix else 1)'",
      "points": 10,
      "timeout": 10
    },
    {
      "specs": {
        "title": "Stelle sicher, dass das Template template.jinja2 im Unterverzeichnis templates/ eine Standard Jinja2-Variable namens variable enthält und die folgende Zeichenkette vor der Variable ausgibt:\n   Grüße aus Kurs:"
      },
      "name": "create a jinja2 template to generate the required output and substitute the course variable",
      "feedback": "The template does not seem correct. Please check the script",
      "urls": [
        "https://jinja.palletsprojects.com/en/3.0.x/intro/",
        "https://ttl255.com/jinja2-tutorial-part-1-introduction-and-variable-substitution/",
        "https://ttl255.com/jinja2-tutorial-part-1-introduction-and-variable-substitution/#var-sub-ex-python"
      ],
      "keywords": [
        "python",
        "jinja2",
        "example",
        "template file"
      ],
      "type": "",
      "run": "grep 'Grüße aus Kurs:.*{{ *course *}}' templates/template.jinja2",
      "file": "",
      "output": "",
      "comparison": "",
      "points": 5,
      "timeout": 20
    },
    {
      "specs": {
        "title": "Schreibe das demo.py Skript so, dass es ein Jinja2 Template namens template.jinja2 aus dem Unterverzeichnis templates lädt. Hierfür musst Du die entsprechenden Importe machen. Importiere mit einem einzigen import statement."
      },
      "name": "checking for required imports",
      "feedback": "The script is not importing Environment/FileSystemLoader. Please check the script",
      "urls": [
        "https://jinja.palletsprojects.com/en/3.0.x/intro/",
        "https://zetcode.com/python/jinja",
        "https://stackoverflow.com/a/38642558"
      ],
      "keywords": [
        "python",
        "import",
        "jinja2",
        "Environment",
        "FileSystemLoader",
        "example"
      ],
      "type": "PYTHONAST",
      "run": "/Module/body/ImportFrom[names/alias[@name='Environment'] and names/alias[@name='FileSystemLoader']]",
      "file": "jinja.py",
      "output": "",
      "comparison": "",
      "points": 5,
      "timeout": 20
    },
    {
      "specs": {
        "title": "Benutze die Jinja2 Imports zum Einrichten von Templating"
      },
      "name": "checking for calls to Environment/FileSystemLoader",
      "feedback": "The script is not calling Environment/FileSystemLoader. Please check the script",
      "urls": [
        "https://jinja.palletsprojects.com/en/3.0.x/intro/",
        "https://pypi.org/project/Jinja2/"
      ],
      "keywords": [
        "python",
        "instantiate",
        "jinja2",
        "Environment",
        "FileSystemLoader"
      ],
      "type": "",
      "run": "pyastgrep \".//Call[func/Name[@id='Environment']]\" && pyastgrep \".//Call[func/Name[@id='FileSystemLoader']]\" demo.py",
      "file": "",
      "output": "",
      "comparison": "",
      "points": 5,
      "timeout": 20
    },
    {
      "specs": {
        "title": "Rufe die nötigen Methoden auf, um das template zu laden"
      },
      "name": "checking for calls to required method",
      "feedback": "The script is not calling the get_template() method. Please check the script",
      "urls": [
        "https://jinja.palletsprojects.com/en/3.0.x/intro/"
      ],
      "keywords": [
        "python",
        "get_template()",
        "jinja2"
      ],
      "type": "PYTHONAST",
      "run": ".//Call[func/Attribute[@attr='get_template']]",
      "file": "jinja.py",
      "output": "",
      "comparison": "",
      "points": 5,
      "timeout": 20
    },
    {
      "specs": {
        "title": "Rufe die nötigen Methode auf, um das template zu rendern"
      },
      "name": "checking for calls to required method",
      "feedback": "The script is not calling the render() method. Please check the script",
      "urls": [
        "https://jinja.palletsprojects.com/en/3.0.x/intro/"
      ],
      "keywords": [
        "python",
        "render",
        "jinja2",
        "template"
      ],
      "type": "PYTHONAST",
      "run": ".//Call[func/Attribute[@attr='render']]",
      "file": "jinja.py",
      "output": "",
      "comparison": "",
      "points": 5,
      "timeout": 20
    },
    {
      "specs": {
        "title": "Schreibe das Skript so, dass es ein Jinja2 Template namens template.jinja2 aus dem Unterverzeichnis templates lädt und die Template-Variable name substituiert mit einer Zeichenkette, die eingegeben wird. Das entsprechende template wird dann via STDOUT ausgegeben."
      },
      "name": "create a script to generate the required output",
      "feedback": "The script is not printing the required output. Please check the script",
      "urls": [
        "https://jinja.palletsprojects.com/en/3.0.x/intro/",
        "https://ttl255.com/jinja2-tutorial-part-1-introduction-and-variable-substitution/"
      ],
      "keywords": [
        "python",
        "jinja2",
        "example",
        "template file"
      ],
      "type": "",
      "dependsOnAll": true,
      "run": "python3 jinja.py",
      "file": "",
      "input": "test",
      "output": "Hallo test",
      "comparison": "contains",
      "points": 5,
      "timeout": 20
    }
  ]
}
